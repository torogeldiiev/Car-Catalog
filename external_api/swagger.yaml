swagger: "2.0"
info:
  title: Car Catalog API
  version: "1.0"
paths:
  /cars/create:
    post:
      summary: Create a new car
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: regNum
          description: Registration numbers of the cars to create
          schema:
            type: object
            required:
              - regNums
            properties:
              regNums:
                type: array
                items:
                  type: string
      responses:
        201:
          description: Successfully created cars
          schema:
            type: array
            items:
              $ref: "#/definitions/Car"
        400:
          description: Bad request
        500:
          description: Internal server error

  /cars/get:
    get:
      summary: Get cars filtered by criteria
      produces:
        - application/json
      parameters:
        - in: query
          name: criteria
          type: string
          required: true
          description: Filtering criteria
        - in: query
          name: limit
          type: integer
          description: Limit the number of results
        - in: query
          name: offset
          type: integer
          description: Offset for pagination
      responses:
        200:
          description: Successfully retrieved cars
          schema:
            type: array
            items:
              $ref: "#/definitions/Car"
        400:
          description: Bad request
        500:
          description: Internal server error

  /cars/update:
    put:
      summary: Update a car
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          type: string
          required: true
          description: ID of the car to update
        - in: body
          name: updatedCar
          description: Updated car data
          schema:
            $ref: "#/definitions/Car"
      responses:
        200:
          description: Successfully updated car
        400:
          description: Bad request
        500:
          description: Internal server error

  /cars/delete:
    delete:
      summary: Delete a car
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          type: string
          required: true
          description: ID of the car to delete
      responses:
        200:
          description: Successfully deleted car
        400:
          description: Bad request
        500:
          description: Internal server error

  /people/create:
    post:
      summary: Create a new person
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: personData
          description: Information about the person to create
          schema:
            $ref: "#/definitions/People"
      responses:
        201:
          description: Successfully created person
          schema:
            type: object
            properties:
              personID:
                type: integer
        400:
          description: Bad request
        500:
          description: Internal server error

  /people/get:
    get:
      summary: Get person by ID
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          type: integer
          required: true
          description: ID of the person to retrieve
      responses:
        200:
          description: Successfully retrieved person
          schema:
            $ref: "#/definitions/People"
        400:
          description: Bad request
        500:
          description: Internal server error

  /people/update:
    put:
      summary: Update a person
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          type: integer
          required: true
          description: ID of the person to update
        - in: body
          name: updatedPerson
          description: Updated person data
          schema:
            $ref: "#/definitions/People"
      responses:
        200:
          description: Successfully updated person
        400:
          description: Bad request
        500:
          description: Internal server error

  /people/delete:
    delete:
      summary: Delete a person
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          type: integer
          required: true
          description: ID of the person to delete
      responses:
        200:
          description: Successfully deleted person
        400:
          description: Bad request
        500:
          description: Internal server error

definitions:
  Car:
    type: object
    properties:
      ID:
        type: integer
      RegNum:
        type: string
      Make:
        type: string
      Model:
        type: string
      Year:
        type: integer
      OwnerID:
        type: integer

  People:
    type: object
    properties:
      Name:
        type: string
      Surname:
        type: string
      Patronymic:
        type: string
